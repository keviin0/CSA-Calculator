Index: src/util/MainMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package util;\r\n\r\nimport java.awt.Color;\r\nimport java.awt.Container;\r\nimport java.awt.EventQueue;\r\n\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JLabel;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuItem;\r\n\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.event.ActionEvent;\r\nimport ui.CalculatorUI;\r\nimport ui.Thai21;\r\n\r\n\r\npublic class MainMenu extends JFrame {\r\n    // This class is the first screen that is comes up with the Menus.\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    private static final long serialVersionUID = 1L;\r\n\r\n\r\n    /**\r\n     * Launch the application.\r\n     */\r\n    public static void main(String[] args) {\r\n        EventQueue.invokeLater(() -> {\r\n            try {\r\n                MainMenu frame = new MainMenu();\r\n                frame.setVisible(true);\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the frame.\r\n     */\r\n    public MainMenu() {\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setBounds(100, 100, 450, 300);\r\n\r\n        // JLabel with image\r\n        JLabel pic = new JLabel(\"\");\r\n        java.awt.Image image = new ImageIcon(\"APCompSci.jpeg\").getImage();\r\n        pic.setIcon(new ImageIcon(image));\r\n        pic.setBounds(377, 111, 128, 128);\r\n\r\n        // Content Panel to add Label and Image\r\n        //https://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html\r\n        Container content = getContentPane();\r\n        content.setBackground(new Color(100,100,255));\r\n        content.add(pic);\r\n\r\n        // Menu Objects\r\n        JMenuBar menuBar = new JMenuBar();\r\n        setJMenuBar(menuBar);\r\n\r\n        JMenu mnHone = new JMenu(\"Home\");\r\n        menuBar.add(mnHone);\r\n\r\n        JMenuItem mntmPreferences = new JMenuItem(\"Preferences\");\r\n        mnHone.add(mntmPreferences);\r\n\r\n        JMenuItem mPreferences2 = new JMenuItem(\"Preferences 2\");\r\n        mnHone.add(mPreferences2);\r\n\r\n        JMenu mnApTest = new JMenu(\"AP Test\");\r\n        menuBar.add(mnApTest);\r\n\r\n        JMenu mnJig = new JMenu(\"Labs\");\r\n        menuBar.add(mnJig);\r\n\r\n        JMenuItem mThai21 = new JMenuItem(\"Thai 21\");\r\n        mThai21.addActionListener(e -> {\r\n            Thai21 frame = new Thai21();\r\n            frame.setVisible(true);\r\n        });\r\n        mnJig.add(mThai21);\r\n\r\n        JMenuItem mntmCalculator = new JMenuItem(\"Calculator\");\r\n        mntmCalculator.addActionListener(e -> {\r\n            CalculatorUI frame = new CalculatorUI();\r\n            frame.setVisible(true);\r\n        });\r\n        mnJig.add(mntmCalculator);\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/util/MainMenu.java	(revision ca1bba19f80c817454e3e3ae35807ea399e788bc)
+++ src/util/MainMenu.java	(date 1603516261892)
@@ -15,6 +15,7 @@
 import java.awt.event.ActionEvent;
 import ui.CalculatorUI;
 import ui.Thai21;
+import ui.Anime;
 
 
 public class MainMenu extends JFrame {
@@ -93,7 +94,12 @@
         });
         mnJig.add(mntmCalculator);
 
-
+        JMenuItem mntmAnime = new JMenuItem("Anime Retriever");
+        mntmCalculator.addActionListener(e -> {
+            Anime frame = new Anime();
+            frame.setVisible(true);
+        });
+        mnJig.add(mntmAnime);
     }
 
 }
Index: src/util/APIRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/util/APIRequest.java	(date 1603515767638)
+++ src/util/APIRequest.java	(date 1603515767638)
@@ -0,0 +1,30 @@
+package util;
+import java.io.IOException;
+import java.net.*;
+import java.net.http.HttpClient;
+import java.net.http.HttpRequest;
+import java.net.http.HttpResponse;
+
+
+public class APIRequest {
+    public static String get(int year, String season) {
+
+        String result = "";
+        HttpClient client = HttpClient.newHttpClient();
+
+        HttpRequest request = HttpRequest.newBuilder()
+                .uri(URI.create("https://api.jikan.moe/v3/season/" + Integer.toString(year) + "/" + season))
+                .header("accept","application/json")
+                .build(); //Create HTTP GET request for api
+
+        try {
+            HttpResponse response = client.send(request, HttpResponse.BodyHandlers.ofString()); //Send request and store response
+            System.out.println(response.body());
+            result = (String) response.body();
+        } catch(Exception e){
+            System.out.println("Failed request" + e);
+        }
+        //TODO: PARSE JSON AND RETURN TITLES
+        return result; //Return response
+    }
+}
Index: src/ui/Anime.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ui/Anime.java	(date 1603515767643)
+++ src/ui/Anime.java	(date 1603515767643)
@@ -0,0 +1,55 @@
+package ui;
+import javax.swing.*;
+import java.awt.*;
+import util.APIRequest;
+
+public class Anime extends JFrame {
+
+    private final JLabel animeArea = new JLabel("Seasonal anime retriever");
+    private JTextArea yearArea; //Text input for year
+    private JTextArea seasonArea; //Text input for season
+    private static String ENTER = "Enter"; //Submit button
+
+    public static void main(String[] args) {
+        EventQueue.invokeLater(() -> {
+            try {
+                Anime frame = new Anime();
+                frame.setSize(300,300);
+                frame.setVisible(true);
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        });
+    }
+
+    public Anime(){
+        Container c = getContentPane();
+        JPanel p = new JPanel();
+        JButton b = new JButton("Submit"); //Submit button
+
+        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
+        c.add(animeArea); //Add label to container
+        yearArea = new JTextArea("Year",1, 10);
+        p.add(yearArea); //Add text area for year to panel
+        seasonArea = new JTextArea("Season",1, 10);
+        p.add(seasonArea); //Add text area for season to panel
+        p.add(b); //Add button to panel
+        c.add(p); //add panel to container
+
+        b.addActionListener(e -> {
+            try {
+                int year = Integer.parseInt(yearArea.getText()); //Retrieve text from yearArea and store in variable typecasted to int
+                String season = seasonArea.getText();  //Retrieve text from season Area
+                String response = APIRequest.get(year, season); //Send to model code
+                System.out.println(response);
+            }catch(Exception f){
+                JOptionPane.showMessageDialog(new JFrame(), "Make sure the year is an int and the season is a valid season", "Dialog",
+                        JOptionPane.ERROR_MESSAGE); //Error message popup if exception thronw from try
+            }
+        });
+        //TODO: Throw custom exception if not a valid season or year.
+
+    }
+
+
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_14\" default=\"false\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision ca1bba19f80c817454e3e3ae35807ea399e788bc)
+++ .idea/misc.xml	(date 1603515767618)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_14" default="false" project-jdk-name="15" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" default="false" project-jdk-name="adopt-openj9-15" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
