Index: src/util/Playfield.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package util;\r\n\r\nimport ui.UnoUI;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Playfield {\r\n    Card topCard;\r\n    int round = 0;\r\n    Player actPlayer; //active player\r\n    ArrayList<Player> players = new ArrayList<Player>();\r\n    boolean actionSuccess;\r\n\r\n    public Playfield(int playerNum, String[] names, UnoUI gameView){ //Initialize playfield\r\n\r\n        Deck test = new Deck();\r\n        //System.out.println(test.cardDeck);\r\n        test.shuffle();\r\n        //System.out.println(test.cardDeck);\r\n        topCard = pop(test);\r\n        addPlayers(playerNum, names);\r\n\r\n        for(int i = 0; i < playerNum; i++){ //Start each player with 7 cards\r\n            for(int j = 0; j < 7; j++){\r\n                players.get(i).hand.add(pop(test));\r\n            }\r\n        }\r\n\r\n        while(true){\r\n            actPlayer = players.get(round % (playerNum - 1));\r\n            gameView.action(actPlayer, topCard);\r\n\r\n            if (actPlayer.hand.isEmpty()) {\r\n                //UnoUI.win(actPlayer); //TODO: Create winner prompt in UnoUI\r\n                break;\r\n            }\r\n            round++;\r\n            continue;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public Card pop(Deck d){\r\n        Card result = d.cardDeck.get(0);\r\n        d.cardDeck.remove(0);\r\n        return result;\r\n    }\r\n\r\n    public void push(Player p, Card selected){\r\n        int index = 0;\r\n        for(int i = 0; i < p.hand.size(); i++){\r\n            if (p.hand.get(i).cardColor == selected.cardColor){\r\n                if (p.hand.get(i).cardNum == selected.cardNum){\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        topCard = p.hand.get(index);\r\n        p.hand.remove(selected);\r\n    }\r\n\r\n    public void addPlayers(int numPlayers, String[] args) {\r\n        for(int i = 0; i < numPlayers; i++){\r\n            players.add(new Player(args[i]));\r\n        }\r\n    }\r\n\r\n    public boolean drawCard(Player p, int num, Deck d) { //draws num amount of cards into activePlayer(p)'s hand from passed in deck\r\n        for(int i = 0; i < num; i++){\r\n            p.hand.add(pop(d));\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public boolean playCard(Card c, Card t) { //c is card to be placed, t is top card\r\n        if(c.cardColor == Card.COLOR.SPECIAL){\r\n            //\r\n        }\r\n        if(topCard.cardColor != c.cardColor){ //Check if card is unabled to be played\r\n            if(topCard.cardNum == c.cardNum){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        push(actPlayer, c);\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/util/Playfield.java	(revision 7b42e4d4935558814b203029e6797b6d3a7767fd)
+++ src/util/Playfield.java	(date 1603948732607)
@@ -85,6 +85,7 @@
         }
 
         push(actPlayer, c);
+        return true;
 
 
     }
